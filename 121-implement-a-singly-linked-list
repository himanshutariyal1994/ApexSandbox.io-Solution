public class LinkedList{
    Node head;
    Node tail;
    Integer size;

    public LinkedList() {
        this.head = null;
        this.tail = null;
        this.size = 0;
    }
    
    public void addToFront(Integer value){
        Node n = new Node();
        n.data = value;

        if(this.head == null) {
            this.head = n;
            this.tail = this.head;
        } else {
            n.next = this.head;
            this.head = n;
        }
        this.size++;
    }

    public Integer removeFromFront(){
        if(this.size == 0) {
            return null;
        }

        Node current = this.head;
        this.head = this.head.next;
        this.size--;
        return current.data;
    }

    public void addToTail(Integer value){
        Node n = new Node();
        n.data = value;

        if(this.head == null) {
            this.head = n;
            this.tail = this.head;
        } else {
            this.tail.next = n;
            this.tail = n;
        }
        this.size++;
    }

    public Integer removeFromTail(){
        if(this.size == 0) {
            return null;
        }

        Node current = this.head;
        Node previous = null;

        while(current.next != null) {
            previous = current;
            current = current.next;
        }
        
        previous.next = null;
        this.tail = previous;
        this.size--;
        return current.data;
    }

    public Integer size(){
        return this.size;
    }    
}

public class Node{
    Integer data;
    Node next;
}