public class LinkedList{

    public Node head;
    public Node tail;
    public Integer size;

    public LinkedList() {
        this.head = null;
        this.tail = null;
        this.size = 0;
    }

    // Add element to the front of LL
    public void addToFront(Integer value){
        Node node = new Node();
        node.data = value;

        if(this.head == null) {
            this.head = node;
            this.tail = node;
        } else {
            node.next = this.head;
            this.head = node;
        }
        this.size++;
    }

    // Add element to the end of LL
    public void addToTail(Integer value){
        Node node = new Node();
        node.data = value;

        if(this.head == null) {
            this.head = node;
            this.tail = node;
        } else {
            this.tail.next = node;
            this.tail = node;
        }
        this.size++;
    }

    // Remove element from front of linked list
    public Integer removeFromFront(){
        if(this.head == null) {
            return null;
        }

        Integer nodeVal = this.head.value;
        this.head = this.head.next;
        this.size--;
        return nodeVal;
    }

    // Remove element from end of linked list
    public Integer removeFromTail(){
        if(this.tail == null) {
            return null;
        }

        Integer nodeVal;
        if(this.size == 1) {
             nodeVal = this.head.value;
            this.head = null;
            this.size--;
            return nodeVal;
        }

        Node current = this.head;
        Node previous = null;

        while(current.next != null) {
            previous = current;
            current = current.next;
        }

        nodeVal = current.value;
        previous.next = null;
        this.tail = previous;
        this.size--;
        return nodeVal;
    }

    public Integer size(){
        return this.size;
    }    
}

public class Node{
    Integer data;
    Node next;
}